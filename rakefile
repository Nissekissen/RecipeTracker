require 'sequel'
require 'sequel/extensions/migration'

task :seed do 
    require "bundler"
    Bundler.require
    require_relative 'db/seeder'
    Seeder.seed!
end

namespace :db do
    desc "Run migrations"
    task :migrate do
        DB = Sequel.sqlite('db/development.sqlite3')
        Sequel::Migrator.run(DB, 'migrations')
        puts 'Migrations are up to date.'
    end

    task :syncsearch do
        require_relative 'helpers/search'
        DB = Sequel.sqlite('db/development.sqlite3')
        sync_search_table
        puts "Search table synced"
    end

    task :generate_migration, [:file_name] do |t, args|
        raise "Usage: rake db:generate_migration[file_name]" if args[:file_name].nil?
        # get the last migration number
        last_migration = Dir['migrations/*.rb'].map { |f| f.match(/(\d+)_/)[1].to_i }.max || 0
        # fill the migration number with zeros
        migration_number = format('%03d', last_migration + 1)

        migration_file = "migrations/#{migration_number}_#{args[:file_name]}.rb"
        File.write(migration_file, "\nSequel.migration do\n  change do\n    # write your migration here\n  end\nend\n")
        puts "Created migration file: #{migration_file}"    
    end
end

task :dev do
    sh 'bundle exec rerun --ignore "*.{erb,js,css}" --force-polling "rackup --host 0.0.0.0"'
end

task :run do
    #todo
end

task :test do
    #todo
end

#sudo rake kill med lösenordet wsp
#todo testa på windowsdator
task :kill do
    sh 'killall ruby && killall rack && killall rerun'
end